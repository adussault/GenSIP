INPUTS AND OUTPUTS:

			User					
			  \__,->analyzeFoil:	
			  			panPath, maskPath, ---> panFolder,maskFolder
			  			foilname="40360,2", 					|
						Quarter="", MoDirt="Mo", 				|
						res=1, GenPoster=False					|
			  			|									    |
			  			|					 .__________________|
			  			analyzeSubImages(	 |
			  				panFolder,maskFolder, 
			  				foilname="40360_2", Quarter="", 
			  				MoDirt="Mo", res=1, GenPoster=False)
			  				|
			  				BIGmakePoster(subImage)
			  					BIGmakePoster(
									Mask = 0, kern=6
									KuSize=17, Gaus1=3
									Gaus2 = 11, rsize = .1
									Kuw_only = False, ExcludeDirt = True
										|
										BIGposterfy(image,k_size=6)
											    blk=(image_copy<=4)
												pleat=(5<=image_copy)&(image_copy<=40)
												darkMo=(41<=image_copy)&(image_copy<=119)
												Mo=(120<=image_copy)&(image_copy<=195)
												Pt=(196<=image_copy)&(image_copy<=215)
												...
												image_copy = cv2.morphologyEx(image_copy, cv2.MORPH_OPEN, kernel)
									  ._________/
									  |
									poster
							|			\_________________		
							|							  |
							BIGregionalThresh(subImage,poster,Mask=subMask,p=150,
											  d=180,m=210,pt=240,hE=253,MoDirt=MoDirt)
								BIGregionalThresh(
									p=8,d=28,
									m=55,pt=60,
									hE=70,gaussBlur=3,
									threshType=0L,Mask=0,
									GetMask=0,MoDirt="Mo")
									|
									cv2.GaussianBlur{
										pleatMask: cv2.GaussianBlur(Image, (5,5), 0)
										darkMoMask: cv2.GaussianBlur(Image, (5,5), 0)
										MoMask: cv2.GaussianBlur(Image, (gaussBlur,gaussBlur), 0)
										PtMask: cv2.GaussianBlur(Image, (gaussBlur,gaussBlur), 0)
										highExMask: cv2.GaussianBlur(Image, (gaussBlur,gaussBlur), 0)}
									|
									cv2.threshold{
										pleatMask: cv2.threshold(pleatMask, p,255,threshType)
										darkMoMask: cv2.threshold(darkMoMask, d,255,threshType)
										MoMask: cv2.threshold(MoMask, m,255,threshType)
										PtMask: cv2.threshold(PtMask, pt,255,threshType)
										highExMask: cv2.threshold(highExMask, hE,255,threshType)}
									...
									threshedImage
								.___/
								|
							threshed
							|
							threshed = threshed.astype(np.bool_)
							PixPt = np.sum(threshed)
							AreaPt = round(PixPt*res*10**-6, 4)
							PixFoil = np.sum(subMask.astype(np.bool_))
							AreaFoil = round(PixFoil*res*10**-6, 4)
							|
							out
									
									